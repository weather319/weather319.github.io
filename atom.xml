<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>All IS ONE</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weather319.github.io/"/>
  <updated>2016-05-11T13:42:39.000Z</updated>
  <id>http://weather319.github.io/</id>
  
  <author>
    <name>Weather</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 使用gdal变换空间坐标系统</title>
    <link href="http://weather319.github.io/2016/05/11/Python-%E4%BD%BF%E7%94%A8gdal%E5%8F%98%E6%8D%A2%E7%A9%BA%E9%97%B4%E5%9D%90%E6%A0%87%E7%B3%BB%E7%BB%9F/"/>
    <id>http://weather319.github.io/2016/05/11/Python-使用gdal变换空间坐标系统/</id>
    <published>2016-05-11T12:09:08.000Z</published>
    <updated>2016-05-11T13:42:39.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;使用CoordinateTransformation函数转化不同的坐标系统&quot;&gt;&lt;a href=&quot;#使用CoordinateTransformation函数转化不同的坐标系统&quot; class=&quot;headerlink&quot; title=&quot;使用CoordinateTransformation函数转化不同的坐标系统&quot;&gt;&lt;/a&gt;使用CoordinateTransformation函数转化不同的坐标系统&lt;/h1&gt;&lt;h2 id=&quot;Gdal读取遥感图片&quot;&gt;&lt;a href=&quot;#Gdal读取遥感图片&quot; class=&quot;headerlink&quot; title=&quot;Gdal读取遥感图片&quot;&gt;&lt;/a&gt;Gdal读取遥感图片&lt;/h2&gt;&lt;p&gt;在使用GDAL库读取GeoTiff格式的遥感数据中，需要涉及到操作经纬度参数来提取图片中具体一块区域的图片。&lt;br&gt;读取到的一个dataset（对应GDALDataset类）是一个光栅数据以及和它有关系的信息的集合。特别地dataset包含了光栅数据的大小（像素、线等）。dataset同时也为对应的光栅数据指定了坐标系统。dataset本身还可以包含元数据，它们以一种键/值对 的方式来组织。GDAL的数据集是基于OpenGIS Grid Coverages的格式定义的。&lt;br&gt;&lt;strong&gt;dataset包含的地理空间坐标系统是不同的，有的是平面空间坐标，有的是大地空间坐标（如：经纬度），所以在不同的坐标空间之间转化在有的时候是非常必要的。&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Dataset的坐标系统由OpenGIS-WKT字符串定义，它包含了：&quot;&gt;&lt;a href=&quot;#Dataset的坐标系统由OpenGIS-WKT字符串定义，它包含了：&quot; class=&quot;headerlink&quot; title=&quot;Dataset的坐标系统由OpenGIS WKT字符串定义，它包含了：&quot;&gt;&lt;/a&gt;Dataset的坐标系统由OpenGIS WKT字符串定义，它包含了：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 一个全局的坐标系名称。 
2. 一个地理坐标系名称。 
3. 一个基准标识符。 
4. 椭球体的名字。长半轴(semi-major axis)和反扁率(inverse flattening)。 
5. 初子午线(prime meridian)名和其与格林威治子午线的偏移值。 
6. 投影方法类型（如横轴莫卡托）。 
7. 投影参数列表（如中央经线等）。 
8. 一个单位的名称和其到米和弧度单位的转换参数。 
9. 轴线的名称和顺序。
10. 在预定义的权威坐标系中的编码（如EPSG）。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在GDAL中，返回坐标系统的函数是GDALDataset::GetProjectionRef()。 它返回的坐标系统描述了地理参考坐标，暗含着仿射地理参考转换，这地理参考转换是由GDALDataset::GetGeoTransform()来返回。由GCPs地理参考坐标描述的坐标系统是由 GDALDataset::GetGCPProjection()返回的。&lt;br&gt;注意，返回的坐标系统字符串“”表示未知的地理参考坐标系统。&lt;br&gt;&lt;strong&gt; wkt对坐标转换很重要 &lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;转化坐标系的步骤（个人理解）：&quot;&gt;&lt;a href=&quot;#转化坐标系的步骤（个人理解）：&quot; class=&quot;headerlink&quot; title=&quot;转化坐标系的步骤（个人理解）：&quot;&gt;&lt;/a&gt;转化坐标系的步骤（个人理解）：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;定义源坐标系，定义目标坐标系。使用 ob = osr.SpatialReference()方式建立&lt;/li&gt;
&lt;li&gt;分别对2个坐标系定义参数。由于源坐标系来自遥感地图，所以要从要遥感数据中获得wkt字符串。  wkt = dataset.GetProjectionRef()可以从数据集中获取wkt字符串，然后使用ob_ori.ImportFromWkt(wkt)函数，把参数导入到源坐标系。&lt;/li&gt;
&lt;li&gt;目标坐标系在这我们选择美国定义的’WGS84’大地坐标系，由于这个坐标系是已知常用的坐标系，所以我们使用ob_for.SetWellKnownGeogCS(“WGS84”)来定义系统参数。&lt;/li&gt;
&lt;li&gt;到现在，2个坐标系统都被定义好了。下一步是建立它们的关系——  ct = osr.CoordinateTransformation(object,origin），其中，origin是源坐标系，object是目标坐标系。&lt;/li&gt;
&lt;li&gt;最后，就是传入坐标和获取坐标。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;函数定义&quot;&gt;&lt;a href=&quot;#函数定义&quot; class=&quot;headerlink&quot; title=&quot;函数定义&quot;&gt;&lt;/a&gt;函数定义&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;把得到的平面直角坐标转化成WGS84经纬度坐标&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;原始坐标的投影系统用sr来表示，是由读取的TIF遥感图像决定的&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wkt_WGS84&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(xsize,ysize,wkt)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;首先建立2个投影坐标系，然后分别导入相应的坐标参数&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_Long = osr.SpatialReference()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_xy = osr.SpatialReference()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_xy.ImportFromWkt(wkt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_Long.SetWellKnownGeogCS(&lt;span class=&quot;string&quot;&gt;&quot;WGS84&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;建立转化方程，返回WGS84经纬度&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ct = osr.CoordinateTransformation(object_xy,object_Long)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Latitude,longitude,High = ct.TransformPoint(xsize,ysize)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;经过转化的WGS84经纬度为(%s,%s)&#39;&lt;/span&gt; %(Latitude,longitude))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Latitude,longitude&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;把经纬度转化成平面直角坐标系统&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WGS84_wkt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Latitude,longitude,wkt)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_Long = osr.SpatialReference()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_xy = osr.SpatialReference()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_xy.ImportFromWkt(wkt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_Long.SetWellKnownGeogCS(&lt;span class=&quot;string&quot;&gt;&quot;WGS84&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ct = osr.CoordinateTransformation(object_Long,object_xy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xsize,ysize,zsize = ct.TransformPoint(Latitude,longitude,&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xsize = float(int(xsize+&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ysize = float(int(ysize+&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;经过转化的仿射坐标为(%s,%s)&#39;&lt;/span&gt; %(xsize,ysize))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xsize,ysize&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;仿射地理变换&quot;&gt;&lt;a href=&quot;#仿射地理变换&quot; class=&quot;headerlink&quot; title=&quot;仿射地理变换&quot;&gt;&lt;/a&gt;仿射地理变换&lt;/h2&gt;&lt;p&gt;要想在2个坐标系之间变换，必须得得到原本遥感数据中的坐标值，这个坐标值我称之为仿射坐标。&lt;br&gt;GDAL数据集有两种方式描述栅格位置（用点/线坐标系）以及地理参考坐标系之间的关系。 第一种也是比较常用的是使用仿射转换，另一种则是GCPs。&lt;br&gt;仿射变换由6个参数构成，它们由GetGeoTransform()返回它们把点/线坐标， 用下面的关系转将点/线影射到地理坐标：&lt;br&gt;   Xgeo = GT(0) + Xpixel*GT(1) + Yline*GT(2)&lt;br&gt;   Ygeo = GT(3) + Xpixel*GT(4) + Yline*GT(5)&lt;br&gt;假设影像上面为北方，GT2和GT4参数为0，而GT1是象元宽，GT5是象元高， （GT0，GT3）点位置是影像的左上角。&lt;/p&gt;
&lt;p&gt;将地理坐标转换为像素点的操作为：&lt;br&gt; FileX = (int)floor((GeoX * GT[5] - GeoY * GT[2] -  GT[0] * GT[5] + GT[2] * GT[3]) /  (GT[1] * GT[5] - GT[2] * GT[4]));&lt;br&gt; FileY = (int)floor((GeoX * GT[4] - GeoY * GT[1] -  GT[0] * GT[4] + GT[1] * GT[3]) /  (GT[2] * GT[4] - GT[1] * GT[5]));&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Geo_Points&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileX,FileY,GT)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GeoX = GT[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + FileX * GT[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] + FileY * GT[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GeoY = GT[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] + FileX * GT[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] + FileY * GT[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;转化后的仿射坐标为(%s,%s)&#39;&lt;/span&gt; %(GeoX,GeoY))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; GeoX,GeoY&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;File_points&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(GeoX,GeoY,GT)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileX = float((GeoX * GT[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] - GeoY * GT[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] -  GT[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] + GT[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]) /  (GT[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] - GT[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileY = float((GeoX * GT[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] - GeoY * GT[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] -  GT[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] + GT[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]) /  (GT[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] - GT[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] * GT[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileX = int(FileX+&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileY = int(FileY+&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;转化后的图像坐标为(%s,%s)&#39;&lt;/span&gt; %(FileX,FileY))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; FileX,FileY&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;测试代码&quot;&gt;&lt;a href=&quot;#测试代码&quot; class=&quot;headerlink&quot; title=&quot;测试代码&quot;&gt;&lt;/a&gt;测试代码&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dataset = gdal.Open(filePath_1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;获得tif的坐标，其中左上角的坐标为[0],[3]&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adfGeoTransform = dataset.GetGeoTransform()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;获得tif的投影坐标系统&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wkt = dataset.GetProjectionRef()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39; 右下角的仿射坐标x,y&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nXSize = dataset.RasterXSize &lt;span class=&quot;comment&quot;&gt;#列数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nYSize = dataset.RasterYSize &lt;span class=&quot;comment&quot;&gt;#行数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zero_x,zero_y = Geo_Points(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,adfGeoTransform)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rd_x,rd_y = Geo_Points(nXSize,nYSize,adfGeoTransform)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;所读取遥感图片的仿射系统参数为[&amp;#123;&amp;#125;]&#39;&lt;/span&gt;.format(adfGeoTransform))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;测试，把原点和右下角点转换成经纬度)&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;原点的仿射坐标为(%s,%s)&#39;&lt;/span&gt; %(zero_x,zero_y))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WGS84_zero_x,WGS84_zero_y= wkt_WGS84(zero_x,zero_y,wkt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;右下角的仿射坐标为(%s,%s)&#39;&lt;/span&gt; %(rd_x,rd_y))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WGS84_rd_x,WGS84_rd_y = wkt_WGS84(rd_x,rd_y,wkt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;测试，把得到的2个经纬度转化回仿射坐标&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;原点的经纬度为(%s,%s)&#39;&lt;/span&gt; %(WGS84_zero_x,WGS84_zero_y))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xsize0,ysize0 = WGS84_wkt(WGS84_zero_x,WGS84_zero_y,wkt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;测试，把仿射坐标对应到图像坐标&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;右下角的图像坐标为(%s,%s)&#39;&lt;/span&gt; %(nXSize,nYSize))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;右下角的仿射坐标为(%s,%s)&#39;&lt;/span&gt; %(rd_x,rd_y))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;file_rd_x,file_rd_y = File_points(rd_x,rd_y,adfGeoTransform)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;测试结果&quot;&gt;&lt;a href=&quot;#测试结果&quot; class=&quot;headerlink&quot; title=&quot;测试结果&quot;&gt;&lt;/a&gt;测试结果&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;所读取遥感图片的仿射系统参数为[(&lt;span class=&quot;number&quot;&gt;126885.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3625515.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-30.0&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;原点的仿射坐标为(&lt;span class=&quot;number&quot;&gt;126885.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3625515.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;经过转化的WGS84经纬度为(&lt;span class=&quot;number&quot;&gt;119.020437123&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32.7043061635&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;右下角的仿射坐标为(&lt;span class=&quot;number&quot;&gt;365715.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3409185.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;经过转化的WGS84经纬度为(&lt;span class=&quot;number&quot;&gt;121.596244068&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;30.8081674204&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;原点的经纬度为(&lt;span class=&quot;number&quot;&gt;119.020437123&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32.7043061635&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;经过转化的仿射坐标为(&lt;span class=&quot;number&quot;&gt;126885.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3625515.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;右下角的图像坐标为(&lt;span class=&quot;number&quot;&gt;7961&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7211&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;右下角的仿射坐标为(&lt;span class=&quot;number&quot;&gt;365715.0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3409185.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;转化后的图像坐标为(&lt;span class=&quot;number&quot;&gt;7961&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7211&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用CoordinateTransformation函数转化不同的坐标系统&quot;&gt;&lt;a href=&quot;#使用CoordinateTransformation函数转化不同的坐标系统&quot; class=&quot;headerlink&quot; title=&quot;使用CoordinateTransformation函数转化不同的坐标系统&quot;&gt;&lt;/a&gt;使用CoordinateTransformation函数转化不同的坐标系统&lt;/h1&gt;&lt;h2 id=&quot;Gdal读取遥感图片&quot;&gt;&lt;a href=&quot;#Gdal读取遥感图片&quot; class=&quot;headerlink&quot; title=&quot;Gdal读取遥感图片&quot;&gt;&lt;/a&gt;Gdal读取遥感图片&lt;/h2&gt;&lt;p&gt;在使用GDAL库读取GeoTiff格式的遥感数据中，需要涉及到操作经纬度参数来提取图片中具体一块区域的图片。&lt;br&gt;读取到的一个dataset（对应GDALDataset类）是一个光栅数据以及和它有关系的信息的集合。特别地dataset包含了光栅数据的大小（像素、线等）。dataset同时也为对应的光栅数据指定了坐标系统。dataset本身还可以包含元数据，它们以一种键/值对 的方式来组织。GDAL的数据集是基于OpenGIS Grid Coverages的格式定义的。&lt;br&gt;&lt;strong&gt;dataset包含的地理空间坐标系统是不同的，有的是平面空间坐标，有的是大地空间坐标（如：经纬度），所以在不同的坐标空间之间转化在有的时候是非常必要的。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://weather319.github.io/tags/python/"/>
    
      <category term="gdal" scheme="http://weather319.github.io/tags/gdal/"/>
    
  </entry>
  
  <entry>
    <title>Python 存储图片到sqlite3中</title>
    <link href="http://weather319.github.io/2016/05/03/Python-%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E5%88%B0sqlite3%E4%B8%AD/"/>
    <id>http://weather319.github.io/2016/05/03/Python-存储图片到sqlite3中/</id>
    <published>2016-05-03T12:21:45.000Z</published>
    <updated>2016-05-04T01:29:41.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Python-把图片转化为blob格式存储到sqlite3数据库中并读取&quot;&gt;&lt;a href=&quot;#Python-把图片转化为blob格式存储到sqlite3数据库中并读取&quot; class=&quot;headerlink&quot; title=&quot;Python 把图片转化为blob格式存储到sqlite3数据库中并读取&quot;&gt;&lt;/a&gt;Python 把图片转化为blob格式存储到sqlite3数据库中并读取&lt;/h1&gt;&lt;h2 id=&quot;应用场景：&quot;&gt;&lt;a href=&quot;#应用场景：&quot; class=&quot;headerlink&quot; title=&quot;应用场景：&quot;&gt;&lt;/a&gt;应用场景：&lt;/h2&gt;&lt;p&gt;SQLite是一个开源的嵌入式关系数据库，它在2000年由D. Richard Hipp发布，它的减少应用程序管理数据的开销，SQLite可移植性好，很容易使用，很小，高效而且可靠。&lt;br&gt;SQLite嵌入到使用它的应用程序中，它们共用相同的进程空间，而不是单独的一个进程。从外部看，它并不像一个RDBMS，但在进程内部，它却是完整的，自包含的数据库引擎。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;每个存储在 SQLite 数据库中的值都具有以下存储类之一：
&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;存储类&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NULL&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;值是一个 NULL 值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INTEGER&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REAL&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TEXT&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BLOB&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;值是一个 blob 数据，完全根据它的输入存储。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在轻量级数据库sqlit中，图片的读取一般是使用图片的地址。例如：path = ‘/image.jpg’&lt;br&gt;然后把这个路径保存在数据库中，下次加载的时候就可以读取路径后显示。&lt;strong&gt; 但这也带来一个问题，如果保存图片的文件夹被破坏，或者文件名发生改变时，就会出现问题。 &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我选择把一些不大的图片，转化成blob格式放入数据库中，只要数据库存在，这些图片就不会被破坏。&lt;/p&gt;
&lt;h2 id=&quot;代码：&quot;&gt;&lt;a href=&quot;#代码：&quot; class=&quot;headerlink&quot; title=&quot;代码：&quot;&gt;&lt;/a&gt;代码：&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sqlite3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cv2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_conn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;连接到数据库，如果文件路径存在则连接，如果不存在，则报错&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; os.path.exists(path) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; os.path.isfile(path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        conn = sqlite3.connect(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;成功连接到[&amp;#123;&amp;#125;]的数据库&#39;&lt;/span&gt;.format(path))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; conn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;打开错误，请检查路径&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;insert_image_db&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(MapId,image)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	sql_path = &lt;span class=&quot;string&quot;&gt;&quot;test.db&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	conn = get_conn(sql_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	img_blob = sqlite3.Binary(image)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; 目的是把image转化成blob格式，然后保存到sql中&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		conn.execute(&lt;span class=&quot;string&quot;&gt;&quot;INSERT INTO MAP (MapId,Image) VALUES(?,?);&quot;&lt;/span&gt;,(MapId,img_blob))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		conn.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		conn.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; IOError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;写入数据库失败&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		conn.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;retrieve_image_db&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(MapId)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	sql_path = &lt;span class=&quot;string&quot;&gt;&quot;test.db&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	conn = get_conn(sql_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cursor = conn.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot; 读取存在数据库中的blob格式图片&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sqli = &lt;span class=&quot;string&quot;&gt;&quot;SELECT Image FROM MAP WHERE MapId = :mapid&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		param = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;mapid&#39;&lt;/span&gt;:MapId&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cursor.execute(sqli,param)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		image = cursor.fetchone()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		image = np.array(image[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		conn.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; IOError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;读取数据库失败&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		conn.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;测试&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image_path = &lt;span class=&quot;string&quot;&gt;&quot;image.jpg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MapId = &lt;span class=&quot;string&quot;&gt;&quot;20160502&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image = cv2.imread(image_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert_image_db(MapId,image)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img = retrieve_image_db(MapId)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;读取到的是没有变形过的数据&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img = img.reshape(image.shape)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;总结：&quot;&gt;&lt;a href=&quot;#总结：&quot; class=&quot;headerlink&quot; title=&quot;总结：&quot;&gt;&lt;/a&gt;总结：&lt;/h1&gt;&lt;p&gt;具体的sqlite介绍和分析，可参考以下内容&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/hustcat/archive/2009/02/12/1389448.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/hustcat/archive/2009/02/12/1389448.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-把图片转化为blob格式存储到sqlite3数据库中并读取&quot;&gt;&lt;a href=&quot;#Python-把图片转化为blob格式存储到sqlite3数据库中并读取&quot; class=&quot;headerlink&quot; title=&quot;Python 把图片转化为blob格式存储到sqlite3数据库中并读取&quot;&gt;&lt;/a&gt;Python 把图片转化为blob格式存储到sqlite3数据库中并读取&lt;/h1&gt;&lt;h2 id=&quot;应用场景：&quot;&gt;&lt;a href=&quot;#应用场景：&quot; class=&quot;headerlink&quot; title=&quot;应用场景：&quot;&gt;&lt;/a&gt;应用场景：&lt;/h2&gt;&lt;p&gt;SQLite是一个开源的嵌入式关系数据库，它在2000年由D. Richard Hipp发布，它的减少应用程序管理数据的开销，SQLite可移植性好，很容易使用，很小，高效而且可靠。&lt;br&gt;SQLite嵌入到使用它的应用程序中，它们共用相同的进程空间，而不是单独的一个进程。从外部看，它并不像一个RDBMS，但在进程内部，它却是完整的，自包含的数据库引擎。&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://weather319.github.io/tags/python/"/>
    
      <category term="sqlite" scheme="http://weather319.github.io/tags/sqlite/"/>
    
  </entry>
  
  <entry>
    <title>Python 操作numpy 矩阵代替for循环</title>
    <link href="http://weather319.github.io/2016/04/29/Python-%E6%93%8D%E4%BD%9Cnumpy-%E7%9F%A9%E9%98%B5%E4%BB%A3%E6%9B%BFfor%E5%BE%AA%E7%8E%AF/"/>
    <id>http://weather319.github.io/2016/04/29/Python-操作numpy-矩阵代替for循环/</id>
    <published>2016-04-29T07:56:38.000Z</published>
    <updated>2016-04-29T09:20:49.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Python-操作numpy-矩阵代替for循环&quot;&gt;&lt;a href=&quot;#Python-操作numpy-矩阵代替for循环&quot; class=&quot;headerlink&quot; title=&quot;Python 操作numpy 矩阵代替for循环&quot;&gt;&lt;/a&gt;Python 操作numpy 矩阵代替for循环&lt;/h1&gt;&lt;h2 id=&quot;具体问题：&quot;&gt;&lt;a href=&quot;#具体问题：&quot; class=&quot;headerlink&quot; title=&quot;具体问题：&quot;&gt;&lt;/a&gt;具体问题：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;上一篇文章中，使用kmeans聚类后，我得到了一个存放4个中心点颜色值的4乘3矩阵。为了得到这个矩阵中，颜色残差最大的那个分类的索引，我必须使第三列减去（第一+第二列）的均值。最后找出色差最大的值，并返回索引。&lt;br&gt;&lt;strong&gt; 4乘3矩阵中，使用for循环好像没什么问题，但是如果这个矩阵是1000乘以1000呢？那么循环次数达到了惊人的10^6次。&lt;/strong&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;方法：&quot;&gt;&lt;a href=&quot;#方法：&quot; class=&quot;headerlink&quot; title=&quot;方法：&quot;&gt;&lt;/a&gt;方法：&lt;/h2&gt;&lt;p&gt; 一开始为了快速得到结果，我使用了这样一个代码：C++的思路是使用for循环&lt;br&gt; &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find_max&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(center)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&lt;span class=&quot;string&quot;&gt;&quot;中心点坐标为&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	m,n = np.shape(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	center_zero = np.float32(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	red_max = (center_zero[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; red_max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	idmax = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;#循环次数为行数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, n):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		print(center_zero[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (center_zero[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;) &amp;gt; red_max:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 red_max = (center_zero[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			 idmax = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	zero = np.zeros([m,n])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	zero[idmax] = center[idmax]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	print(&lt;span class=&quot;string&quot;&gt;&quot;选取第[&amp;#123;&amp;#125;]类&quot;&lt;/span&gt;.format(idmax + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;坐标值为&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(zero)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;运行结果：&quot;&gt;&lt;a href=&quot;#运行结果：&quot; class=&quot;headerlink&quot; title=&quot;运行结果：&quot;&gt;&lt;/a&gt;运行结果：&lt;/h2&gt; &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cen = np.float32(np.array([[&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;115&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;81&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;117&lt;/span&gt;]]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find_max(cen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;中心点坐标为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;	[[&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [ &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;115&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [ &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;81&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;117&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-6.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;40.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;选取第[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]类为鱼&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;坐标值为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;	[[   &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [   &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [  &lt;span class=&quot;number&quot;&gt;52.&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;81.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;107.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [   &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;[Finished &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;s]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;numpy的操作&quot;&gt;&lt;a href=&quot;#numpy的操作&quot; class=&quot;headerlink&quot; title=&quot;numpy的操作&quot;&gt;&lt;/a&gt;numpy的操作&lt;/h2&gt;&lt;p&gt; numpy是python的一个数据操作库，可以像matlab一样操作数组跟矩阵。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find_max_numpy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(center)&lt;/span&gt;:&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&lt;span class=&quot;string&quot;&gt;&quot;中心点坐标为&quot;&lt;/span&gt;)	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	m,n = np.shape(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	center_res = center[:,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]-(center[:,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]+center[:,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;结果为[&amp;#123;&amp;#125;]&quot;&lt;/span&gt;.format(center_res))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	imax = center_res.max() &lt;span class=&quot;comment&quot;&gt;#找到最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	idmax = np.where(center_res == imax) &lt;span class=&quot;comment&quot;&gt;#得到最大值的索引位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	idmax = np.int32(idmax) &lt;span class=&quot;comment&quot;&gt;#由于它得到的是一个索引位置，所以需要转化成int类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	zero = np.zeros([m,n])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	zero[idmax] = center[idmax]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&lt;span class=&quot;string&quot;&gt;&quot;选取第[&amp;#123;&amp;#125;]类&quot;&lt;/span&gt;.format(idmax + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(&lt;span class=&quot;string&quot;&gt;&quot;坐标值为&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	print(zero)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;结果&quot;&gt;&lt;a href=&quot;#结果&quot; class=&quot;headerlink&quot; title=&quot;结果&quot;&gt;&lt;/a&gt;结果&lt;/h2&gt; &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cen = np.float32(np.array([[&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;115&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;81&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;117&lt;/span&gt;]]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find_max_numpy(cen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt; 中心点坐标为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;	[[&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [ &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;115&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [ &lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;81&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;117&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;结果为 [ &lt;span class=&quot;number&quot;&gt;-6.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;40.5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;-2.&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;选取第[[[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]]]类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;坐标值为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;	[[   &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [   &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [  &lt;span class=&quot;number&quot;&gt;52.&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;81.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;107.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 [   &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;[Finished &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;s]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;运行速度&quot;&gt;&lt;a href=&quot;#运行速度&quot; class=&quot;headerlink&quot; title=&quot;运行速度&quot;&gt;&lt;/a&gt;运行速度&lt;/h2&gt;&lt;p&gt; &lt;strong&gt;有时间可以计算下2个function的复杂度，第一个为O(n^2）,第二个矩阵操作应该快得多，但具体的复杂度是多少还真不知道。从时间上来说也很明显，第一个0.4秒，第二个0.1秒 &lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-操作numpy-矩阵代替for循环&quot;&gt;&lt;a href=&quot;#Python-操作numpy-矩阵代替for循环&quot; class=&quot;headerlink&quot; title=&quot;Python 操作numpy 矩阵代替for循环&quot;&gt;&lt;/a&gt;Python 操作numpy 矩阵代替for循环&lt;/h1&gt;&lt;h2 id=&quot;具体问题：&quot;&gt;&lt;a href=&quot;#具体问题：&quot; class=&quot;headerlink&quot; title=&quot;具体问题：&quot;&gt;&lt;/a&gt;具体问题：&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;上一篇文章中，使用kmeans聚类后，我得到了一个存放4个中心点颜色值的4乘3矩阵。为了得到这个矩阵中，颜色残差最大的那个分类的索引，我必须使第三列减去（第一+第二列）的均值。最后找出色差最大的值，并返回索引。&lt;br&gt;&lt;strong&gt; 4乘3矩阵中，使用for循环好像没什么问题，但是如果这个矩阵是1000乘以1000呢？那么循环次数达到了惊人的10^6次。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://weather319.github.io/tags/python/"/>
    
      <category term="numpy" scheme="http://weather319.github.io/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>Python 使用kmeans聚类分割目标</title>
    <link href="http://weather319.github.io/2016/04/28/Python-%E4%BD%BF%E7%94%A8kmeans%E8%81%9A%E7%B1%BB%E5%88%86%E5%89%B2%E7%9B%AE%E6%A0%87/"/>
    <id>http://weather319.github.io/2016/04/28/Python-使用kmeans聚类分割目标/</id>
    <published>2016-04-28T11:53:54.000Z</published>
    <updated>2016-04-29T07:18:59.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Python-使用kmeans聚类分割目标&quot;&gt;&lt;a href=&quot;#Python-使用kmeans聚类分割目标&quot; class=&quot;headerlink&quot; title=&quot;Python 使用kmeans聚类分割目标&quot;&gt;&lt;/a&gt;Python 使用kmeans聚类分割目标&lt;/h1&gt;&lt;h3 id=&quot;关于背景&quot;&gt;&lt;a href=&quot;#关于背景&quot; class=&quot;headerlink&quot; title=&quot;关于背景&quot;&gt;&lt;/a&gt;关于背景&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在复杂变化的背景中，识别运动目标并跟踪是一件很困难的事情。简单使用灰度阈值或HSV颜色空间阈值分割在特定环境下效果不错，但是在现实环境下（水草、淤泥变化）导致阈值的选择会非常不容易。&lt;/li&gt;
&lt;li&gt;当对象受到光影变化或者背景颜色从黑转化到白等，都会导致目标残缺。&lt;/li&gt;
&lt;li&gt;最重要的问题在于，由于使用阈值分割，不但需要手动设定阈值，不同的背景阈值差别很大，效率非常低。&lt;/li&gt;
&lt;li&gt;生成的轮廓数量会大于目标轮廓数量，需要条件检索目标轮廓，在特定情况下时，会导致目标丢失。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不像汽车、人脸等跟踪，因为鱼没有特定的特征，又需要精确获取目标轮廓来计算速度、尾频等参数，目前大部分办法都是使用离线的模式：即录像、分析、分割目标、计算参数。&lt;/strong&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在视频的实时跟踪中，直接对rgb图像进行聚类，比如设定类数为4-5类，这样可以使复杂背景在光影下寻找目标变简单快速。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码演示&quot;&gt;&lt;a href=&quot;#代码演示&quot; class=&quot;headerlink&quot; title=&quot;代码演示&quot;&gt;&lt;/a&gt;代码演示&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;find_fish_kmeans&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(image)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kernel = np.ones((&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;), np.uint8)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    img = image.copy()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; image &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;图像加载错误&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sys.exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(np.shape(image)) != &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;不是多通道图片，请确认图像类型&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sys.exit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            m, n, _ = np.shape(img)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;# kmeans聚类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Z = np.float32(img.reshape((&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))  &lt;span class=&quot;comment&quot;&gt;# 把图像拉伸成一列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;Z的尺寸为[&amp;#123;&amp;#125;]&quot;&lt;/span&gt;.format(np.shape(Z)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            criteria = (cv2.TERM_CRITERIA_EPS +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        cv2.TERM_CRITERIA_MAX_ITER, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            K = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret, label, center = cv2.kmeans(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Z, K, &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;, criteria, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, cv2.KMEANS_RANDOM_CENTERS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            center = np.uint8(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;中心点坐标为&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;label的尺寸为[&amp;#123;&amp;#125;]&quot;&lt;/span&gt;.format(np.shape(label.flatten())))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img1 = center[label.flatten()]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img1_kmeans = img1.reshape((img.shape))  &lt;span class=&quot;comment&quot;&gt;# 获得聚类的图像&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			center_zero = np.float32(center)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            red_max = (center_zero[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; red_max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            idmax = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, K):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(center_zero[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                           [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (center_zero[i][&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;) &amp;gt; red_max:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    red_max = (center_zero[i][&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                               &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] - (center_zero[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + center_zero[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;# print red_max&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    idmax = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            zero = np.zeros(np.shape(center))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            zero[idmax] = center[idmax]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;# zero = np.uint8(zero) #如果不转化回uint8，图像显示为黑白色。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;选取第[&amp;#123;&amp;#125;]类为鱼&quot;&lt;/span&gt;.format(idmax + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;坐标值为&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(zero)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img2 = zero[label.flatten()]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            img2_kmeans = img2.reshape((img.shape))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; img1_kmeans, img2_kmeans, center, label&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;结果：&quot;&gt;&lt;a href=&quot;#结果：&quot; class=&quot;headerlink&quot; title=&quot;结果：&quot;&gt;&lt;/a&gt;结果：&lt;/h2&gt;&lt;p&gt;鱼-光影下  &lt;img src=&quot;http://7xti8v.com1.z0.glb.clouddn.com/fishresult_1.png&quot; alt=&quot;鱼-光影下&quot;&gt;&lt;br&gt;鱼-阴影下  &lt;img src=&quot;http://7xti8v.com1.z0.glb.clouddn.com/fishresult_2.png&quot; alt=&quot;鱼-阴影下&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;优点：&quot;&gt;&lt;a href=&quot;#优点：&quot; class=&quot;headerlink&quot; title=&quot;优点：&quot;&gt;&lt;/a&gt;优点：&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;直接调用opencv的 cv2.kmeans函数，速度快，视频的实时跟踪不容易丢失轮廓，对鱼的速度、尾频计算非常有用。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;另一大难点在于，2个目标A与B重合时识别到各自的轮廓，AB分离后，继续跟踪到对应的目标AB而不是BA&quot;&gt;&lt;a href=&quot;#另一大难点在于，2个目标A与B重合时识别到各自的轮廓，AB分离后，继续跟踪到对应的目标AB而不是BA&quot; class=&quot;headerlink&quot; title=&quot;另一大难点在于，2个目标A与B重合时识别到各自的轮廓，AB分离后，继续跟踪到对应的目标AB而不是BA&quot;&gt;&lt;/a&gt;&lt;em&gt;另一大难点在于，2个目标A与B重合时识别到各自的轮廓，AB分离后，继续跟踪到对应的目标AB而不是BA&lt;/em&gt;&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-使用kmeans聚类分割目标&quot;&gt;&lt;a href=&quot;#Python-使用kmeans聚类分割目标&quot; class=&quot;headerlink&quot; title=&quot;Python 使用kmeans聚类分割目标&quot;&gt;&lt;/a&gt;Python 使用kmeans聚类分割目标&lt;/h1&gt;&lt;h3 id=&quot;关于背景&quot;&gt;&lt;a href=&quot;#关于背景&quot; class=&quot;headerlink&quot; title=&quot;关于背景&quot;&gt;&lt;/a&gt;关于背景&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在复杂变化的背景中，识别运动目标并跟踪是一件很困难的事情。简单使用灰度阈值或HSV颜色空间阈值分割在特定环境下效果不错，但是在现实环境下（水草、淤泥变化）导致阈值的选择会非常不容易。&lt;/li&gt;
&lt;li&gt;当对象受到光影变化或者背景颜色从黑转化到白等，都会导致目标残缺。&lt;/li&gt;
&lt;li&gt;最重要的问题在于，由于使用阈值分割，不但需要手动设定阈值，不同的背景阈值差别很大，效率非常低。&lt;/li&gt;
&lt;li&gt;生成的轮廓数量会大于目标轮廓数量，需要条件检索目标轮廓，在特定情况下时，会导致目标丢失。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不像汽车、人脸等跟踪，因为鱼没有特定的特征，又需要精确获取目标轮廓来计算速度、尾频等参数，目前大部分办法都是使用离线的模式：即录像、分析、分割目标、计算参数。&lt;/strong&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://weather319.github.io/tags/python/"/>
    
      <category term="opencv" scheme="http://weather319.github.io/tags/opencv/"/>
    
  </entry>
  
</feed>
